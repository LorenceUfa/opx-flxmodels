package models

import (
	"encoding/json"
	"fmt"
)

type PolicyDefinitionSetsPrefix struct {
	IpPrefix string
	/*
            Defines a range for the masklength, or 'exact' if
            the prefix has an exact length.

            Example: 10.3.192.0/21 through 10.3.192.0/24 would be
            expressed as prefix: 10.3.192.0/21,
            masklength-range: 21..24.

            Example: 10.3.192.0/21 would be expressed as
            prefix: 10.3.192.0/21,
            masklength-range: exact	
	*/
	MaskLengthRange string
}

type PolicyDefinitionSetsPrefixSet struct {
	BaseObj
	PrefixSetName string   `SNAPROUTE: "KEY"`
    /*
     List of prefix expressions that are part of the set
	*/
	IpPrefixList [] PolicyDefinitionSetsPrefix
}

func (obj PolicyDefinitionSetsPrefixSet) UnmarshalObject(body []byte) (ConfigObj, error) {
	var policyDefinitionSetsPrefixSet PolicyDefinitionSetsPrefixSet
	var err error
	if len(body) > 0 {
		if err = json.Unmarshal(body, &policyDefinitionSetsPrefixSet); err != nil {
			fmt.Println("### Trouble in unmarshaling PolicyDefinitionSetsPrefixSet from Json", body)
		}
	}
	return policyDefinitionSetsPrefixSet, err
}


type PolicyDefinitionStatementMatchPrefixSet struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement/match-prefix-set.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Match a referenced prefix-set according to the logic
defined in the match-set-options leaf 
    */
	//yang_name: prefix-set class: leaf
	PrefixSet string
	//yang_name: match-set-options class: leaf
	MatchSetOptions int32
}

type PolicyDefinitionSetsNeighbor struct {
	Address [] string
}

type PolicyDefinitionSetsNeighborSet struct {
	BaseObj
	NeighborSetName string `SNAPROUTE: "KEY"`
	NeihgborSet []PolicyDefinitionSetsNeighbor
}

func (obj PolicyDefinitionSetsNeighborSet) UnmarshalObject(body []byte) (ConfigObj, error) {
	var policyDefinitionSetsNeighborSet PolicyDefinitionSetsNeighborSet
	var err error
	if len(body) > 0 {
		if err = json.Unmarshal(body, &policyDefinitionSetsNeighborSet); err != nil {
			fmt.Println("### Trouble in unmarshaling PolicyDefinitionSetsNeighborSet from Json", body)
		}
	}
	return policyDefinitionSetsNeighborSet, err
}

type PolicyDefinitionStatementMatchNeighborSet struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement/match-neighbor-set.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Match a referenced neighbor set according to the logic
defined in the match-set-options-leaf 
    */

	//yang_name: neighbor-set class: leaf
	NeighborSet string
	//yang_name: match-set-options class: leaf
	MatchSetOptions int32
}

type PolicyDefinitionStatementSetsTag struct {
	value [] uint32
}

type PolicyDefinitionStatementSetsTagSet struct {
	BaseObj
	TagSetName string               `SNAPROUTE: "KEY"`
	TagList []PolicyDefinitionStatementSetsTag
}
type PolicyDefinitionStatementMatchTagSet struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement/match-tag-set.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Match a referenced tag set according to the logic defined
in the match-options-set leaf 
    */

	//yang_name: tag-set class: leaf
	TagSet string
	//yang_name: match-set-options class: leaf
	MatchSetOptions int32
}

type PolicyDefinitionStatementIgpActions struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement/igp-actions.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Actions to set IGP route attributes; these actions
apply to multiple IGPs 
    */

	//yang_name: set-tag class: leaf
	SetTag []uint32
}

type PolicyDefinitionStatement struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Policy statements group conditions and actions
within a policy definition.  They are evaluated in
the order specified (see the description of policy
evaluation at the top of this module. 
    */
     BaseObj
	//yang_name: name class: leaf
	Name string  `SNAPROUTE: KEY`
	//yang_name: match-prefix-set class: container
	MatchPrefixSet PolicyDefinitionStatementMatchPrefixSet
	//yang_name: match-neighbor-set class: container
	//MatchNeighborSet PolicyDefinitionStatementMatchNeighborSet
	//yang_name: match-tag-set class: container
	//MatchTagSet PolicyDefinitionStatementMatchTagSet
	//yang_name: install-protocol-eq class: leaf
	InstallProtocolEq string
	//yang_name: accept-route class: leaf
	AcceptRoute bool
	//yang_name: reject-route class: leaf
	RejectRoute bool
	//yang_name: igp-actions class: container
	//IgpActions PolicyDefinitionStatementIgpActions
}

func (obj PolicyDefinitionStatement) UnmarshalObject(body []byte) (ConfigObj, error) {
	var policyDefinitionStmt PolicyDefinitionStatement
	var err error
	if len(body) > 0 {
		if err = json.Unmarshal(body, &policyDefinitionStmt); err != nil {
			fmt.Println("### Trouble in unmarshaling PolicyDefinitionStatement from Json", body)
		}
	}
	return policyDefinitionStmt, err
}

type PolicyDefinition struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: List of top-level policy definitions, keyed by unique
name.  These policy definitions are expected to be
referenced (by name) in policy chains specified in import
or export configuration statements. 
    */
     BaseObj
	//yang_name: name class: leaf
	Name string  `SNAPROUTE: KEY`
	//yang_name: statement class: list
	Statement []PolicyDefinitionStatement}

func (obj PolicyDefinition) UnmarshalObject(body []byte) (ConfigObj, error) {
	var policyDefinition PolicyDefinition
	var err error
	if len(body) > 0 {
		if err = json.Unmarshal(body, &policyDefinition); err != nil {
			fmt.Println("### Trouble in unmarshaling PolicyDefinition from Json", body)
		}
	}
	return policyDefinition, err
}
