package models

//enumerations
var (
	AttributeComparisonPtAttributeGe = 0
	AttributeComparisonPtAttributeLe = 1
	AttributeComparisonAttributeLe = 2
	AttributeComparisonAttributeGe = 3
	AttributeComparisonPtypesAttributeEq = 4
	AttributeComparisonPtypesAttributeGe = 5
	AttributeComparisonPtAttributeEq = 6
	AttributeComparisonAttributeEq = 7
	AttributeComparisonPtypesAttributeLe = 8
	InetIpVersionUnknown = 0
	InetIpVersionIpv4 = 1
	InetIpVersionIpv6 = 2
	PtMatchSetOptionsTypeINVERT = 0
	PtMatchSetOptionsTypeALL = 1
	PtMatchSetOptionsTypeANY = 2
	PtypesMatchSetOptionsTypeINVERT = 0
	PtypesMatchSetOptionsTypeALL = 1
	PtypesMatchSetOptionsTypeANY = 2
	RpolDefaultPolicyTypeACCEPTROUTE = 0
	RpolDefaultPolicyTypeREJECTROUTE = 1
	PtypesAttributeComparisonAttributeLe = 0
	PtypesAttributeComparisonAttributeGe = 1
	PtypesAttributeComparisonPtypesAttributeEq = 2
	PtypesAttributeComparisonPtypesAttributeGe = 3
	PtypesAttributeComparisonAttributeEq = 4
	PtypesAttributeComparisonPtypesAttributeLe = 5
	MatchSetOptionsTypeINVERT = 0
	MatchSetOptionsTypeALL = 1
	MatchSetOptionsTypeANY = 2
	PtypesInstallProtocolTypePtypesSTATIC = 0
	PtypesInstallProtocolTypePtypesBGP = 1
	PtypesInstallProtocolTypeISIS = 2
	PtypesInstallProtocolTypeBGP = 3
	PtypesInstallProtocolTypePtypesOSPF3 = 4
	PtypesInstallProtocolTypePtypesOSPF = 5
	PtypesInstallProtocolTypePtypesISIS = 6
	PtypesInstallProtocolTypePtypesLOCALAGGREGATE = 7
	PtypesInstallProtocolTypeDIRECTLYCONNECTED = 8
	PtypesInstallProtocolTypeSTATIC = 9
	PtypesInstallProtocolTypePtypesDIRECTLYCONNECTED = 10
	PtypesInstallProtocolTypeLOCALAGGREGATE = 11
	PtypesInstallProtocolTypeOSPF = 12
	PtypesInstallProtocolTypeOSPF3 = 13
	MatchSetOptionsRestrictedTypeINVERT = 0
	MatchSetOptionsRestrictedTypeANY = 1
	PtAttributeComparisonPtAttributeGe = 0
	PtAttributeComparisonPtAttributeLe = 1
	PtAttributeComparisonAttributeLe = 2
	PtAttributeComparisonAttributeGe = 3
	PtAttributeComparisonPtAttributeEq = 4
	PtAttributeComparisonAttributeEq = 5
	IpVersionUnknown = 0
	IpVersionIpv4 = 1
	IpVersionIpv6 = 2
	DefaultPolicyTypeACCEPTROUTE = 0
	DefaultPolicyTypeREJECTROUTE = 1
	InstallProtocolTypePtypesSTATIC = 0
	InstallProtocolTypeBGP = 1
	InstallProtocolTypePtBGP = 2
	InstallProtocolTypeISIS = 3
	InstallProtocolTypePtOSPF = 4
	InstallProtocolTypePtDIRECTLYCONNECTED = 5
	InstallProtocolTypePtISIS = 6
	InstallProtocolTypePtypesOSPF3 = 7
	InstallProtocolTypePtypesOSPF = 8
	InstallProtocolTypePtypesBGP = 9
	InstallProtocolTypePtypesISIS = 10
	InstallProtocolTypePtypesLOCALAGGREGATE = 11
	InstallProtocolTypeDIRECTLYCONNECTED = 12
	InstallProtocolTypeSTATIC = 13
	InstallProtocolTypePtypesDIRECTLYCONNECTED = 14
	InstallProtocolTypePtSTATIC = 15
	InstallProtocolTypeLOCALAGGREGATE = 16
	InstallProtocolTypeOSPF = 17
	InstallProtocolTypePtOSPF3 = 18
	InstallProtocolTypeOSPF3 = 19
	InstallProtocolTypePtLOCALAGGREGATE = 20
	PtMatchSetOptionsRestrictedTypeINVERT = 0
	PtMatchSetOptionsRestrictedTypeANY = 1
	PtypesMatchSetOptionsRestrictedTypeINVERT = 0
	PtypesMatchSetOptionsRestrictedTypeANY = 1
	PtInstallProtocolTypePtBGP = 0
	PtInstallProtocolTypeISIS = 1
	PtInstallProtocolTypePtOSPF = 2
	PtInstallProtocolTypePtDIRECTLYCONNECTED = 3
	PtInstallProtocolTypePtISIS = 4
	PtInstallProtocolTypeLOCALAGGREGATE = 5
	PtInstallProtocolTypeBGP = 6
	PtInstallProtocolTypeDIRECTLYCONNECTED = 7
	PtInstallProtocolTypeSTATIC = 8
	PtInstallProtocolTypePtSTATIC = 9
	PtInstallProtocolTypeOSPF = 10
	PtInstallProtocolTypePtOSPF3 = 11
	PtInstallProtocolTypeOSPF3 = 12
	PtInstallProtocolTypePtLOCALAGGREGATE = 13
)

type PolicyDefinitionStatementMatchPrefixSet struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement/match-prefix-set.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Match a referenced prefix-set according to the logic
defined in the match-set-options leaf 
    */

	//yang_name: prefix-set class: leaf
	PrefixSet string
	//yang_name: match-set-options class: leaf
	MatchSetOptions int32
}

type PolicyDefinitionStatementMatchNeighborSet struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement/match-neighbor-set.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Match a referenced neighbor set according to the logic
defined in the match-set-options-leaf 
    */

	//yang_name: neighbor-set class: leaf
	NeighborSet string
	//yang_name: match-set-options class: leaf
	MatchSetOptions int32
}

type PolicyDefinitionStatementMatchTagSet struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement/match-tag-set.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Match a referenced tag set according to the logic defined
in the match-options-set leaf 
    */

	//yang_name: tag-set class: leaf
	TagSet string
	//yang_name: match-set-options class: leaf
	MatchSetOptions int32
}

type PolicyDefinitionStatementIgpActions struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement/igp-actions.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Actions to set IGP route attributes; these actions
apply to multiple IGPs 
    */

	//yang_name: set-tag class: leaf
	SetTag []uint32
}

type PolicyDefinitionStatement struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition/statement.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: Policy statements group conditions and actions
within a policy definition.  They are evaluated in
the order specified (see the description of policy
evaluation at the top of this module. 
    */

	//yang_name: name class: leaf
	Name string  `SNAPROUTE: KEY`
	//yang_name: match-prefix-set class: container
	MatchPrefixSet PolicyDefinitionStatementMatchPrefixSet
	//yang_name: match-neighbor-set class: container
	MatchNeighborSet PolicyDefinitionStatementMatchNeighborSet
	//yang_name: match-tag-set class: container
	MatchTagSet PolicyDefinitionStatementMatchTagSet
	//yang_name: install-protocol-eq class: leaf
	InstallProtocolEq string
	//yang_name: accept-route class: leaf
	AcceptRoute bool
	//yang_name: reject-route class: leaf
	RejectRoute bool
	//yang_name: igp-actions class: container
	IgpActions PolicyDefinitionStatementIgpActions
}

type PolicyDefinition struct {
	/*
    This class was auto-generated by the GOSTRUCT plugin for PYANG
    from YANG module openconfig-routing-policy_mod
    based on the path /policy-definition.
    Each member element of the container is represented as a struct
    variable - with a specific YANG type.

	YANG Description: List of top-level policy definitions, keyed by unique
name.  These policy definitions are expected to be
referenced (by name) in policy chains specified in import
or export configuration statements. 
    */

	//yang_name: name class: leaf
	Name string  `SNAPROUTE: KEY`
	//yang_name: statement class: list
	Statement []PolicyDefinitionStatement}

